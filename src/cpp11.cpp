// Generated by cpp11: do not edit by hand


#include "cpp11/declarations.hpp"

// add.cpp
double add_cpp11(double x, double y);
extern "C" SEXP _simplecpp11_add_cpp11(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(add_cpp11(cpp11::unmove(cpp11::as_cpp<double>(x)), cpp11::unmove(cpp11::as_cpp<double>(y))));
  END_CPP11
}
// add.cpp
double mul_cpp11(double x, double y);
extern "C" SEXP _simplecpp11_mul_cpp11(SEXP x, SEXP y) {
  BEGIN_CPP11
    return cpp11::as_sexp(mul_cpp11(cpp11::unmove(cpp11::as_cpp<double>(x)), cpp11::unmove(cpp11::as_cpp<double>(y))));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP _simplecpp11_add_cpp11(SEXP, SEXP);
extern SEXP _simplecpp11_mul_cpp11(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_simplecpp11_add_cpp11", (DL_FUNC) &_simplecpp11_add_cpp11, 2},
    {"_simplecpp11_mul_cpp11", (DL_FUNC) &_simplecpp11_mul_cpp11, 2},
    {NULL, NULL, 0}
};
}

extern "C" void R_init_simplecpp11(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}

